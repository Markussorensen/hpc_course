Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                24
On-line CPU(s) list:   0-23
Thread(s) per core:    1
Core(s) per socket:    12
Socket(s):             2
NUMA node(s):          2
Vendor ID:             GenuineIntel
CPU family:            6
Model:                 79
Model name:            Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz
Stepping:              1
CPU MHz:               2199.865
CPU max MHz:           2900.0000
CPU min MHz:           1200.0000
BogoMIPS:              4389.91
Virtualization:        VT-x
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              30720K
NUMA node0 CPU(s):     0-11
NUMA node1 CPU(s):     12-23
Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd rsb_ctxsw ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear spec_ctrl intel_stibp flush_l1d
 
Testing matmult_c.gcc
   234.375   1814.970 # matmult_blk 10
   234.375   2895.072 # matmult_blk 20
   234.375   3020.322 # matmult_blk 30
   234.375   3545.459 # matmult_blk 40
   234.375   4098.964 # matmult_blk 50
   234.375   3823.497 # matmult_blk 60
   234.375   3671.674 # matmult_blk 70
   234.375   3679.896 # matmult_blk 80
   234.375   3571.811 # matmult_blk 90
   234.375   4085.969 # matmult_blk 100
   937.500   1808.966 # matmult_blk 10
   937.500   2894.332 # matmult_blk 20
   937.500   3164.172 # matmult_blk 30
   937.500   3750.571 # matmult_blk 40
   937.500   4083.956 # matmult_blk 50
   937.500   3521.086 # matmult_blk 60
   937.500   3595.775 # matmult_blk 70
   937.500   3742.888 # matmult_blk 80
   937.500   3716.175 # matmult_blk 90
   937.500   3842.596 # matmult_blk 100
  5859.375   1814.632 # matmult_blk 10
  5859.375   2874.815 # matmult_blk 20
  5859.375   3201.301 # matmult_blk 30
  5859.375   3651.438 # matmult_blk 40
  5859.375   3888.796 # matmult_blk 50
  5859.375   3599.071 # matmult_blk 60
  5859.375   3511.470 # matmult_blk 70
  5859.375   3527.789 # matmult_blk 80
  5859.375   3694.615 # matmult_blk 90
  5859.375   3723.873 # matmult_blk 100

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15153284: <mm_batch_blocksize> in cluster <dcc> Done

Job <mm_batch_blocksize> was submitted from host <gbarlogin2> by user <s183997> in cluster <dcc> at Thu Jan  5 14:04:56 2023
Job was executed on host(s) <n-62-21-75>, in queue <hpcintro>, as user <s183997> in cluster <dcc> at Thu Jan  5 14:04:58 2023
</zhome/69/1/137385> was used as the home directory.
</zhome/69/1/137385/Desktop/hpc_course/assignment1> was used as the working directory.
Started at Thu Jan  5 14:04:58 2023
Terminated at Thu Jan  5 14:06:31 2023
Results reported at Thu Jan  5 14:06:31 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash
# 02614 - High-Performance Computing, January 2022
# 
# batch script to run matmult on a decidated server in the hpcintro
# queue
#
# Author: Bernd Dammann <bd@cc.dtu.dk>
#
#BSUB -J mm_batch_blocksize
#BSUB -o mm_batch_blocksize%J.out
#BSUB -q hpcintro
#BSUB -n 1
#BSUB -R "rusage[mem=2048]"
#BSUB -W 15
# uncomment the following line, if you want to assure that your job has
# a whole CPU for itself (shared L3 cache)
# #BSUB -R "span[hosts=1] affinity[socket(1)]"

# define the driver name to use
# valid values: matmult_c.studio, matmult_f.studio, matmult_c.gcc or
# matmult_f.gcc
#
EXECUTABLE=matmult_c.gcc

# define the mkn values in the MKN variable
#
PERMS="mnk mkn kmn knm nmk nkm lib"
SIZES="100 200 500"
BLK_SIZES="10 20 30 40 50 60 70 80 90 100"

# define the permutation type in PERM
#
# PERM="mkn"

# uncomment and set a reasonable BLKSIZE for the blk version
#
# BLKSIZE=1

# enable(1)/disable(0) result checking
export MATMULT_COMPARE=0

# start the collect command with the above settings
lscpu

echo " "
echo "Testing $EXECUTABLE"

for S in $SIZES
do 
    for B in $BLK_SIZES

(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   91.72 sec.
    Max Memory :                                 10 MB
    Average Memory :                             8.00 MB
    Total Requested Memory :                     2048.00 MB
    Delta Memory :                               2038.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                5
    Run time :                                   93 sec.
    Turnaround time :                            95 sec.

The output (if any) is above this job summary.

